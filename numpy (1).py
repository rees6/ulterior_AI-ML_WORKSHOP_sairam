# -*- coding: utf-8 -*-
"""numpy

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qdKe3MxFageOJpi0d182T8QAjcpB6hW1
"""

import numpy as np

arr = np.array([1, 2, 3, 4, 5])

print(arr)

print(type(arr))

import numpy as np

arr = np.array((1, 2, 3, 4, 5))

print(arr)

import numpy as np

arr = np.array(42)

print(arr)

import numpy as np

arr = np.array([1, 2, 3, 4, 5])

print(arr)

import numpy as np

arr = np.array([[1, 2, 3], [4, 5, 6]])

print(arr)

import numpy as np

a = np.array(42)
b = np.array([1, 2, 3, 4, 5])
c = np.array([[1, 2, 3], [4, 5, 6]])
d = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]])

print(a.ndim)
print(b.ndim)
print(c.ndim)
print(d.ndim)

import numpy as np

arr = np.array([1, 2, 3, 4], ndmin=5)

print(arr)
print('number of dimensions :', arr.ndim)

import numpy as np

arr = np.array([1, 2, 3, 4])

print(arr.dtype)

!pip install numpy

import numpy as np

data = np.random.rand(2,3,4)
zeroes = np.zeros((2,2,2))
full = np.full((2,2,2), 7)
ones = np.ones((2,2,2))

data

ones

zeroes

full

arr = np.array([[1,2,3,4],[1,2,3,4]])
type(arr)

arr

shape = data.shape
size = data.size
types = data.dtype

shape

size

types

arr = data[0]
slicer = data[0][0:2]
reverse = data[-1]
singleval = data[0][0][0]

arr

slicer

reverse

singleval

data

list1 = np.random.rand(10) 
list2 = np.random.rand(10)

list1

list2

add = np.add(list1, list2)
sub = np.subtract(list1, list2)
div = np.divide(list1, list2)
mult = np.multiply(list1, list2)
dot = np.dot(list1, list2)

add

sub

div

mult

dot

sqrt = np.sqrt(25)
ab = np.abs(-2)
power = np.power(2,7)
log = np.log(25)
exp = np.exp([2,3])
mins = np.min(list1)
maxs = np.max(list1)

sqrt

ab

power

log

mins

maxs

exp

data

data[0][0][0] = 700

data

data.sort()
data

print(data.shape)

data = data.reshape((2,2,-1))
data.shape

zeroes = np.zeros((8))
print(zeroes)
zeroes = np.append(zeroes, [3,4])
print(zeroes)

zeroes = np.insert(zeroes, 2, 1)
print(zeroes)

data

np.delete(data, 0, axis=1)

np.save("new array", data)

test = np.load("new array.npy")

test